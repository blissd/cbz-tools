#!/usr/bin/env bash
#
# Repacks a CBZ file to convert page images to WEBP or AVIF files

SOURCE_CBZ=""
TARGET_CBZ=""
WORK_DIR="$(mktemp -d)"
RESIZE_PERCENT="100"
PAGE_FORMAT=avif

# Number of images to convert in parallel
NCPU="$(nproc)"

usage() {
	echo "cbz-repack [-n parallelism] [-f avif|webp] [-r resize percentage] comic.cbz"
	exit 0
}

while getopts ":hq:o:r:f:n:" opt; do
  case $opt in
  h)
    usage
    exit
    ;;
	n)
	  NCPU="$OPTARG"
	  ;;
	f)
	  PAGE_FORMAT="$OPTARG"
	  ;;
	r)
	  RESIZE="$OPTARG"
	  ;;
  o)
    TARGET_CBZ="$OPTARG"
    ;;
	\?)
		echo "Invalid option: $OPTARG" 1>&2
		exit 1
		;;
	:)
		echo "Invalid option: -$OPTARG requires an argument" 1>&2
		exit 1
		;;
	esac
done

shift $(($OPTIND -1))

SOURCE_CBZ="$1"

cleanup() {
	rm -rf $WORK_DIR
}

trap 'cleanup' ERR EXIT

if [ "$TARGET_CBZ" = "" ]; then
	DIR="$(dirname "$SOURCE_CBZ")"
	FILE="$(basename "$SOURCE_CBZ")"
	TARGET_CBZ="$DIR/${FILE%.*}-$PAGE_FORMAT.cbz"
fi

echo "Archive: $SOURCE_CBZ"

# Extract original CBZ to source directory
SOURCE_DIR="$WORK_DIR/source"
mkdir -p "$SOURCE_DIR"

# Construct repacked CBZ in target directory
TARGET_DIR="$WORK_DIR/target"
mkdir -p "$TARGET_DIR"

unzip -q -o "$SOURCE_CBZ" -d "$SOURCE_DIR"

# Find all images from CBZ archive. Use file mime type rather than file extension.
page_count=1
find "$SOURCE_DIR" -type f -exec file --mime-type {} \+ | awk -F: '{if ($2 ~/image\//) print $1}' | sort | while read page_name; do

  # Compute name to convert to in target directory
  target_page_name=$(printf "$TARGET_DIR/page-%03d.$PAGE_FORMAT" "$page_count")

	# Double escape source page name to fix janky file names
	page_name="${page_name@Q}"
	#echo "Escaped: [${page_name}]"
	#echo "Escaped twice: [${page_name@Q}]"
  CMD="magick convert ${page_name@Q} -resize '$RESIZE_PERCENT%' '$target_page_name'"

  # Append commands to execute to a file which can then be run through xargs to do the
  # image conversions in parallel
	echo echo -n . '&&' "$CMD" >> $WORK_DIR/convert
	echo "Page count: $page_count" > $WORK_DIR/page_count_msg

  let page_count=page_count+1
done

cat $WORK_DIR/page_count_msg

# Run image file conversions in parallel
cat $WORK_DIR/convert | xargs -P $NCPU -I{} sh -c {}

echo

# Copy ComicInfo.xml if it exists
if [ -f "$SOURCE_DIR/ComicInfo.xml" ]; then
	cp "$SOURCE_DIR/ComicInfo.xml" "$TARGET_DIR"
fi

# Create CBZ archive
#echo zip --junk-paths "$TARGET_CBZ" "$TARGET_DIR/*"
zip -q --junk-paths "$TARGET_CBZ" "$TARGET_DIR"/*

