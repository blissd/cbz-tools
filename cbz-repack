#!/usr/bin/env bash
#
# SPDX-FileCopyrightText: Â© 2024 David Bliss <vivid.map6767@davidbliss.me>
# SPDX-License-Identifier: GPL-3.0-or-later
#
# Repacks a CBZ file to convert page images to other file formats.

SOURCE_CBZ=""
TARGET_CBZ=""
WORK_DIR="$(mktemp -d)"
RESIZE_PERCENT="100"
PAGE_FORMAT=avif

# Number of images to convert in parallel
#NCPU="$(nproc)"
NCPU=8

usage() {
	echo "cbz-repack [-n parallelism] [-f avif|webp|jxl] [-r resize percentage] comic.cbz"
	exit 0
}

while getopts ":hq:o:r:f:n:" opt; do
  case $opt in
  h)
    usage
    exit
    ;;
	n)
	  NCPU="$OPTARG"
	  ;;
	f)
	  PAGE_FORMAT="$OPTARG"
	  ;;
	r)
	  RESIZE="$OPTARG"
	  ;;
  o)
    TARGET_CBZ="$OPTARG"
    ;;
	\?)
		echo "Invalid option: $OPTARG" 1>&2
		exit 1
		;;
	:)
		echo "Invalid option: -$OPTARG requires an argument" 1>&2
		exit 1
		;;
	esac
done

shift $(($OPTIND -1))

SOURCE_CBZ="$1"

cleanup() {
	rm -rf $WORK_DIR
}

trap 'cleanup' ERR EXIT

if [ "$TARGET_CBZ" = "" ]; then
	DIR="$(dirname "$SOURCE_CBZ")"
	FILE="$(basename "$SOURCE_CBZ")"
	TARGET_CBZ="$DIR/${FILE%.*}-$PAGE_FORMAT.cbz"
	TARGET_CBZ="$(realpath "$TARGET_CBZ")"
fi

echo "Work Dir: $WORK_DIR"
echo "Archive: $SOURCE_CBZ"

# Extract original CBZ to source directory
SOURCE_DIR="$WORK_DIR/source"
mkdir -p "$SOURCE_DIR"

# Construct repacked CBZ in target directory
TARGET_DIR="$WORK_DIR/target"
mkdir -p "$TARGET_DIR"

unzip -q -o "$SOURCE_CBZ" -d "$SOURCE_DIR"

# Create target folders.
find "$SOURCE_DIR" -type d -printf "$TARGET_DIR/%P\0" | xargs -r0 mkdir -p

# Find all images from CBZ archive. Use file mime type rather than file extension.
page_count=1
find "$SOURCE_DIR" -type f -printf "%P\n" | while read file_name; do

	# Copy non-image files as-is

	mime_type=$(file --brief --mime-type "$SOURCE_DIR/$file_name")
	if [[ ! "$mime_type" =~ "image" ]]; then
		target_file_name="$TARGET_DIR/$file_name"
		mv "$SOURCE_DIR/${file_name}" "${target_file_name}"
		continue
	fi

	page_name="$SOURCE_DIR/${file_name}"

  # Compute name to convert to in target directory
  target_page_name="$TARGET_DIR/${file_name%.*}"
  target_page_name="${target_page_name}.$PAGE_FORMAT"

  # Double escape source page name to fix janky file names
  page_name="${page_name@Q}"
  target_page_name="${target_page_name@Q}"
  if [[ "$PAGE_FORMAT" = "jxl" ]]; then
	   CMD="cjxl --lossless_jpeg=0 --distance=3 ${page_name@Q} ${target_page_name@Q}"
	else
		CMD="magick ${page_name@Q} -resize '$RESIZE_PERCENT%' ${target_page_name@Q}"
  fi
  #echo $CMD

  # Append commands to execute to a file which can then be run through xargs to do the
  # image conversions in parallel
	echo echo -n . '&&' ">/dev/null 2>&1 $CMD" >> $WORK_DIR/convert
	echo "Page count: $page_count" > $WORK_DIR/page_count_msg

  let page_count=page_count+1
done

cat $WORK_DIR/page_count_msg

# Run image file conversions in parallel
cat $WORK_DIR/convert | xargs -P $NCPU -I{} sh -c {}

echo

# Create CBZ archive
cd "$TARGET_DIR"
zip -q -r "$TARGET_CBZ" .
