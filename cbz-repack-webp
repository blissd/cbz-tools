#!/usr/bin/env zsh
#
# Repacks a CBZ file to convert JPEG files to WEBP files

SOURCE=""
TARGET=""
DIR="$(mktemp -d)"
RESIZE="100%"

usage() {
	echo "cbz-repack-webp [-r resize percentage] comic.cbz"
	exit 0
}

while getopts ":hq:o:r:" opt; do
    case $opt in
        h)
            usage
            exit
            ;;
	r)
	    RESIZE="$OPTARG"
	    ;;
        o)
            OUT_NAME="$OPTARG"
            ;;
		\?)
			echo "Invalid option: $OPTARG" 1>&2
			exit 1
			;;
		:)
			echo "Invalid option: -$OPTARG requires an argument" 1>&2
			exit 1
		    ;;
    esac
done

SOURCE="${@[$OPTIND]}"

cleanup() {
	rm -rf $DIR
}

trap 'cleanup' ERR EXIT

if [ "$TARGET" = "" ]; then
	TARGET="$(basename "$SOURCE")"
	TARGET="${TARGET%.*}-webp.cbz"
fi

echo $TARGET

unzip "$SOURCE" -d "$DIR"

# Convert output images to webp
#for x in $(find "$DIR" -type f -exec file --mime-type {} \+ | awk -F: '{if ($2 ~/image\//) print $1}'); do
	#echo convert "$x" "${x%.*}.webp"
	#convert "$x" "${x%.*}.webp"
	#rm "$x"
#done

page_count=1
find "$DIR" -type f -exec file --mime-type {} \+ | awk -F: '{if ($2 ~/image\//) print $1}' | sort | while read x; do
  # sanitize file names.
  ext="${x##*.}"
  page_name=$(printf "$DIR/page-%03d.$ext" "$page_count")
  mv "$x" "$page_name"  
  let page_count=page_count+1

  echo "$page_name" >> $DIR/source-file-names
  echo echo convert "$page_name" -resize "$RESIZE"% "${page_name%.*}.webp" '&&' convert "$page_name" -resize "$RESIZE"% "${page_name%.*}.webp" >> $DIR/convert
done

NCPU="$(nproc)"

cat $DIR/convert | xargs -P $NCPU -I{} sh -c {}

cat $DIR/source-file-names | while read x; do rm "$x"; done

rm $DIR/source-file-names $DIR/convert

# Create CBZ archive
echo zip --junk-paths "$TARGET" "$DIR/*"
zip --junk-paths "$TARGET" "$DIR"/*

