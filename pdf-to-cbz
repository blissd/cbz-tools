#!/usr/bin/env bash
#

DPI=400
PREFIX=page
CBZ_NAME=""
DIR=$(mktemp -d)

usage() {
	echo "pdf-to-cbz [-d 400] [-o jpeg|web] comic.pdf"
	exit 0
}

while getopts ":hq:o:d:" opt; do
    case $opt in
        h)
	    usage
	    exit
	    ;;
	d)
	    DPI=$OPTARG
	    ;;
        o)
	    CBZ_NAME=$OPTARG
	    ;;
	\?)
	    echo "Invalid option: $OPTARG" 1>&2
	    exit 1
	    ;;
	:)
	    echo "Invalid option: -$OPTARG requires an argument" 1>&2
	    exit 1
	    ;;
    esac
done

shift $((OPTIND-1))

#echo $1
PDF="$1"

# Count PDF pages
PAGE_COUNT=$(pdfinfo "$PDF" | awk '/^Pages:/ {print $2}')

cleanup() {
    rm -rf $DIR
}

progress_bar() {
    pv -c -l -p -t -e -s $PAGE_COUNT -N $1 
}

convert_to_webp() {
    WEBP="${1%.*}.webp"
    gm convert "$1" "$WEBP"
    echo "$WEBP"
}

export -f convert_to_webp

trap 'cleanup' ERR EXIT

if [ "$CBZ_NAME" = "" ]; then
	CBZ_NAME="$(basename "$PDF")"
	CBZ_NAME="$(dirname "$PDF")/${CBZ_NAME%.*}.cbz"
fi

echo "PDF: $PDF" 1>&2
echo "Pages: $PAGE_COUNT" 1>&2
echo "Working directory: $DIR" 1>&2

NCPU=$(nproc)

# Extract pages as images.
pdftoppm -r $DPI -progress -png "$PDF" "$DIR/$PREFIX" 2>&1 | grep /page | progress_bar PPM  >/dev/null
#pdftoppm -r $DPI -progress "$PDF" "$DIR/$PREFIX" 2>&1 

# Convert output images to webp
find $DIR -name '*.png' | while read x; do convert_to_webp "$x"; done | progress_bar WEBP >/dev/null

# Create CBZ archive
zip --junk-paths "$CBZ_NAME" $DIR/*.webp | progress_bar ZIP >/dev/null

