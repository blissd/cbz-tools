#!/usr/bin/env bash
#

DPI=400
PREFIX=page
CBZ_NAME=""
DIR=$(mktemp -d)
PAGE_FORMAT=jpeg

usage() {
	echo "pdf-to-cbz [-d 400] [-f jpeg|jxl|webp|avif] [-o comic.cbz] comic.pdf"
	exit 0
}

while getopts ":ho:d:i:f:" opt; do
	case $opt in
	    h)
		usage
	    exit
	    ;;
		d)
	    DPI=$OPTARG
	    ;;
		f)
		PAGE_FORMAT=$OPTARG
	    ;;
		o)
	    CBZ_NAME=$OPTARG
	    ;;
		\?)
	    echo "Invalid option: $OPTARG" 1>&2
	    exit 1
	    ;;
		:)
	    echo "Invalid option: -$OPTARG requires an argument" 1>&2
	    exit 1
	    ;;
    esac
done

if ! command -v pdfinfo >/dev/null 2>&1; then
  echo "Error: please install poppler-utils for pdfinfo." 1>&2
  exit 1
fi

if ! command -v pdftoppm >/dev/null 2>&1; then
  echo "Error: please install poppler-utils for pdftoppm." 1>&2
  exit 1
fi

if ! command -v magick >/dev/null 2>&1; then
  echo "Error: please install ImageMagick." 1>&2
  exit 1
fi

if ! command -v cjxl >/dev/null 2>&1; then
  echo "Error: please install libjxl-utils." 1>&2
  exit 1
fi

shift $((OPTIND-1))

PDF="$1"

# Count PDF pages
PAGE_COUNT=$(pdfinfo "$PDF" | awk '/^Pages:/ {print $2}')

cleanup() {
    rm -rf $DIR
}

progress_bar() {
    echo "Stage: $1 "
    while read x; do echo -n .; done
		echo
}

convert_page() {
    OUT="${1%.*}.$PAGE_FORMAT"
		if [ "$PAGE_FORMAT" = "png" ]; then
			mv "$1" "$OUT"
		elif [ "$PAGE_FORMAT" = "jxl" ]; then
			cjxl --lossless_jpeg=0 --distance=3 "$1" "$OUT"
		else
    	   magick convert "$1" "$OUT"
		fi

    echo "$OUT"
}

export -f convert_page

trap 'cleanup' ERR EXIT

if [ "$CBZ_NAME" = "" ]; then
	CBZ_NAME="$(basename "$PDF")"
	CBZ_NAME="$(dirname "$PDF")/${CBZ_NAME%.*} ($PAGE_FORMAT).cbz"
fi

echo "PDF: $PDF" 1>&2
echo "Pages: $PAGE_COUNT" 1>&2
echo "Working directory: $DIR" 1>&2

NCPU=$(nproc)

# Extract pages as images.
pdftoppm -r $DPI -progress -png $EXPORT_ARG "$PDF" "$DIR/$PREFIX"

# Convert page images
find $DIR -regex '.*\.png' | while read x; do convert_page "$x"; done 2>/dev/null

# Create CBZ archive
zip -q --junk-paths "$CBZ_NAME" $DIR/*.$PAGE_FORMAT
